services:
  db:
    image: postgres:15-alpine
    container_name: election-db-prod
    restart: always
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: election_db
      POSTGRES_USER: election_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-election_pass_prod_2025}
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: election-backend-prod
    restart: always
    volumes:
      - static_volume:/code/staticfiles
    env_file:
      - ./backend/.env.production
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: election-frontend-prod
    restart: always
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: election-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - static_volume:/static:ro
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

volumes:
  postgres_prod_data:
  static_volume:

networks:
  app-network:
    driver: bridge
